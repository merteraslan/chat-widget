name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  dependency-audit:
    name: Dependency Security Audit
    uses: ./.github/workflows/_ci.yml
    with:
      node-versions: '["20.x"]'
      run-lint: false
      run-tests: false
      run-build: false
      run-typecheck: false
      run-security-audit: true
      package-manager: 'npm'

  check-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    needs: dependency-audit
    
    permissions:
      contents: read
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: pnpm/action-setup@v4
        with:
          version: latest
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          
      - name: Check for outdated packages
        run: |
          echo "## ðŸ“¦ Dependency Status Report" > dependency-report.md
          echo "" >> dependency-report.md
          echo "Generated on: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          
          # Check for outdated packages
          if pnpm outdated --long || true; then
            echo "### Outdated Packages" >> dependency-report.md
            echo "" >> dependency-report.md
            echo "\`\`\`" >> dependency-report.md
            pnpm outdated --long >> dependency-report.md || true
            echo "\`\`\`" >> dependency-report.md
          else
            echo "âœ… All packages are up to date!" >> dependency-report.md
          fi
          
          echo "" >> dependency-report.md
          echo "### Security Audit" >> dependency-report.md
          echo "" >> dependency-report.md
          echo "\`\`\`" >> dependency-report.md
          pnpm audit --audit-level=low >> dependency-report.md || true
          echo "\`\`\`" >> dependency-report.md
          
      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report-${{ github.run_id }}
          path: dependency-report.md
          retention-days: 30
          
      - name: Create issue for critical updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check for high/critical vulnerabilities using pnpm
          CRITICAL_VULNS=$(pnpm audit --audit-level=high --json 2>/dev/null | jq -r '.metadata.vulnerabilities.high + .metadata.vulnerabilities.critical' 2>/dev/null || echo "0")
          
          if [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "ðŸš¨ Found $CRITICAL_VULNS critical/high vulnerabilities"
            
            # Create or update issue
            ISSUE_TITLE="ðŸš¨ Critical Security Updates Required"
            
            cat > issue_body.md << 'EOF'
          ## Security Alert
          
          Critical or high severity vulnerabilities were found in dependencies.
          
          ### Summary
          - **Critical vulnerabilities:** $CRITICAL_VULNS
          - **Scan date:** $(date)
          
          ### Action Required
          Please run `pnpm audit fix` to resolve these issues.
          
          ### Dependency Report
          See the attached dependency-report artifact for full details.
          
          ---
          *This issue was automatically created by the dependency update workflow.*
          EOF
            
            # Substitute variables in the issue body
            ISSUE_BODY=$(envsubst < issue_body.md)
            
            # Check if issue already exists
            EXISTING_ISSUE=$(gh issue list --label "security" --state open --search "$ISSUE_TITLE" --json number --jq '.[0].number' 2>/dev/null || echo "")
            
            if [ -n "$EXISTING_ISSUE" ]; then
              echo "Updating existing issue #$EXISTING_ISSUE"
              gh issue edit "$EXISTING_ISSUE" --body "$ISSUE_BODY"
            else
              echo "Creating new security issue"
              gh issue create \
                --title "$ISSUE_TITLE" \
                --body "$ISSUE_BODY" \
                --label "security,dependencies" \
                --assignee "@me"
            fi
          else
            echo "âœ… No critical vulnerabilities found"
          fi
